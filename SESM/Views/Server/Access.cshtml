@{
    ViewBag.Title = "Server Access Manager";

    List<KeyValuePair<string, string>> breadCrumb = new List<KeyValuePair<string, string>>();
    breadCrumb.Add(new KeyValuePair<string, string>("Servers", "/Servers/"));
    breadCrumb.Add(new KeyValuePair<string, string>(ViewBag.Server.Name, "/" + ViewBag.ServerID + "/Dashboard/"));
    breadCrumb.Add(new KeyValuePair<string, string>("Server Access Manager", "/" + ViewBag.ServerID + "/Access/"));
    ViewBag.Breadcrumb = breadCrumb;

    ViewBag.RefreshBtn = true;
}
<script src="/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="/assets/global/plugins/bootstrap-contextmenu/bootstrap-contextmenu.js"></script>
<script type="text/javascript" src="/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<link rel="stylesheet" type="text/css" href="/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" />
<style>
    #inpCreateHostRoleUsers td:first-child, #inpEditHostRoleUsers td:first-child {
        text-align: center;
    }

    #inpCreateHostRoleUsers td:first-child, #inpCreateHostRoleUsers th:first-child, #inpEditHostRoleUsers td:first-child, #inpEditHostRoleUsers th:first-child {
        width: 10px;
    }
</style>


<!-- --- Edit Role Modal --- -->
<div class="modal fade" id="editRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Edit Host Role</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="inpEditRoleId" />
                    <div class="form-body form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Role Name</label>
                            <div class="col-md-9">
                                <div class="input-inline">
                                    <input type="text" id="inpEditRoleName" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Permissions</label>
                            <div class="col-md-9">
                                <div id="inpEditRolePermissions" style="height: 200px; overflow-y: auto">

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Users</label>
                            <div class="col-md-9">
                                <div style="height: 200px; overflow-y: auto; overflow-x: hidden">
                                    <table class="table table-striped table-bordered table-hover" id="inpEditRoleUsers">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Login</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn default" data-dismiss="modal">Close</button>
                <button type="button" class="btn blue" id="btnSaveEdit">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="col-md-12">
    <div class="portlet light">
        <div class="portlet-body">
            <div class="tab-content">
                <!-- --- Context Menu --- -->
                <div id="context-menu">
                    <ul class="dropdown-menu pull-left" role="menu">
                        <li>
                            <a href="#">
                                <i class="fa fa-edit"></i> Edit
                            </a>
                        </li>
                    </ul>
                </div>
                <table class="table table-striped table-bordered table-hover" id="serverTable">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                Name
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <p>Hint : Right-click (Desktop) / Long-Press (Mobile) on a line for more options</p>
            </div>

        </div>
    </div>
</div>
<script>
    function initPage() {
        // Initializers
        $.fn.bootstrapSwitch.defaults.onText = '<i class="fa fa-check"></i>';
        $.fn.bootstrapSwitch.defaults.offText = '<i class="fa fa-times"></i>';

        var serverTable = $('#serverTable');

        serverTable.dataTable({
            columns: [{
                orderable: false,
                "visible": false
            }, {
                orderable: true
            }],
            // set the initial value
            language: {
                emptyTable: "No roles"
            },
            paging: false,
            searching: false,
            info: false,
            columnDefs: [{
                searchable: false,
                targets: [0]
            }],
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        var editRoleTable = $("#inpEditRoleUsers");

        editRoleTable.dataTable({
            columns: [{
                orderable: true
            }, {
                orderable: true
            }],
            language: {
                emptyTable: "Loading ..."
            },
            paging: false,
            info: false,
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        $("#inpEditRoleUsers_filter").parent().removeClass("col-md-6");

        // Loading Host Rights
        var Access = {};

        $.get("/API/Server/GetServerRoleAccess",
        function (data) {
            var root = $($.parseXML(data)).find("Response");

            if (root.children("Type").text() == "Error") {
                toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                return;
            }

            var content = root.children("Content");

            Access = {};

            Access.ACCESS_SERVER_READ = content.children("ACCESS_SERVER_READ").text() == "true";
            Access.ACCESS_SERVER_EDIT_USERS = content.children("ACCESS_SERVER_EDIT_USERS").text() == "true";

            loadRoles();
        });

        

        function loadRoles() {
            if (Access.ACCESS_SERVER_READ) {
                $.post("/API/Server/GetServerRoles",
                {ServerId: serverID},
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    serverTable.DataTable().clear();

                    var content = root.children("Content");

                    content.children("ServerRole").each(function () {
                        var item = $(this);
                        var Id = item.children("Id").text();
                        var Name = item.children("Name").text();

                        serverTable.DataTable().row.add([Id, Name]);
                    });

                    serverTable.DataTable().draw();

                    $('tr.odd, tr.even').contextmenu({
                        target: '#context-menu',
                        before: function (e, element, target) {
                            this.getMenu().find("li").hide();
                            e.preventDefault();


                            if (!Access.ACCESS_SERVER_EDIT_USERS)
                                return false;

                            if (Access.ACCESS_SERVER_EDIT_USERS)
                                this.getMenu().find("li:nth-child(1)").show();
                            return true;
                        },
                        onItem: function (context, e) {
                            var serverRoleId = serverTable.DataTable().row($(context).index()).data()[0];

                            var clicked = $(e.target).text().trim();

                            if (clicked == "Edit") {
                                $.post("/API/Server/GetServerRoleDetails",
                                {
                                    ServerRoleId: serverRoleId,
                                    ServerId: serverID
                                },
                                function (data) {

                                    var root = $($.parseXML(data)).find("Response");

                                    if (root.children("Type").text() == "Error") {
                                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                        return;
                                    }

                                    $("#editRoleModal").modal('show');

                                    var content = root.children("Content");

                                    var Name = content.children("Name").text();

                                    $("#inpEditRoleId").val(serverRoleId);

                                    $("#inpEditRoleName").val(Name);
                                    $("#inpEditRoleName").prop("disabled", true);

                                    $("#inpEditRolePermissions").find("input").bootstrapSwitch('state', false);
                                    $("#inpEditRolePermissions").find("input").bootstrapSwitch("readonly", false);

                                    content.children("Permissions").children().each(function () {
                                        var item = $(this).text();

                                        $("#inpEditRolePermissions").find('input[value="' + item + '"]').bootstrapSwitch('state', true);
                                    });

                                    $("#inpEditRolePermissions").find("input").bootstrapSwitch("readonly", true);

                                    $("#inpEditRoleUsers").DataTable().rows().nodes().to$().find("input").prop('checked', false);
                                    $("#inpEditRoleUsers").DataTable().rows().nodes().to$().find("input").prop("disabled", false);

                                    content.children("Users").children().each(function () {
                                        var item = $(this).text();

                                        $("#inpEditRoleUsers").DataTable().rows().nodes().to$().find('input[value="' + item + '"]').prop('checked', true);
                                    });

                                });
                            }
                        }
                    });
                });
            }

            if (Access.ACCESS_SERVER_EDIT_USERS) {

                $.post("/API/Server/GetServerPermissions",
                    { ServerId: serverID },
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    $("#inpEditRolePermissions").empty();

                    var content = root.children("Content");

                    content.children("ServerPerm").each(function () {
                        var item = $(this);
                        var Name = item.children("Name").text();
                        var Value = item.children("Value").text();

                        $("#inpEditRolePermissions").append('<br/><div class="col-md-8">' + Name + '</div><div class="col-md-4 text-center">' +
                            '<input type="checkbox" value="' + Value + '" name="' + Name + '"></div>');
                    });

                    $("#inpEditRolePermissions input[type='checkbox']").bootstrapSwitch();
                });

                $.post("/API/Server/GetUsers",
                    {
                        ServerId: serverID
                    },
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    editRoleTable.DataTable().clear();

                    var content = root.children("Content");

                    content.children("User").each(function () {
                        var item = $(this);
                        var ID = item.children("ID").text();
                        var Login = item.children("Login").text();

                        editRoleTable.DataTable().row.add(['<input type="checkbox" value="' + ID + '" />', Login]);
                    });

                    editRoleTable.DataTable().draw();

                });

            }

        }



        $("#btnSaveEdit").click(function () {


            var userIds = [];

            $("#inpEditRoleUsers input:checked").each(function () {
                var item = $(this);
                userIds.push(item.val());
            });


            $.post("/API/Server/SetServerRoleDetails",
            {
                ServerRoleId: $("#inpEditRoleId").val(),
                Users: userIds.join(";"),
                ServerId: serverID
            },
            function (data) {
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    return;
                }
                loadRoles();
                $("#editRoleModal").modal('hide');
            });
        });

       

        $("#btnRefresh").click(function () {
            loadRoles();
        });
    }
</script>