@{
    ViewBag.Title = "Server Maps";

    List<KeyValuePair<string, string>> breadCrumb = new List<KeyValuePair<string, string>>();
    breadCrumb.Add(new KeyValuePair<string, string>("Server", "/Server/"));
    breadCrumb.Add(new KeyValuePair<string, string>(ViewBag.Server.Name, "/" + ViewBag.ServerID + "/Dashboard/"));
    breadCrumb.Add(new KeyValuePair<string, string>("Server Maps", "/" + ViewBag.ServerID + "/Maps/"));
    ViewBag.Breadcrumb = breadCrumb;

    ViewBag.RefreshBtn = true;
}
<script src="/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="/assets/global/plugins/bootstrap-contextmenu/bootstrap-contextmenu.js"></script>
<style>
    td:nth-child(2), th:nth-child(2) {
        text-align: center;
    }

    td:nth-child(5), th:nth-child(5) {
        text-align: right;
    }
</style>
<!-- --- DOWNLOAD --- -->
<div style="display: none">
    <form id="downloadForm" method="POST" target="download_frame" action="/API/Map/DownloadMap/">
        <input id="downloadFormMapDir" type="hidden" name="MapDir" value="" />
        <input id="downloadFormServerID" type="hidden" name="ServerID" value="" />
    </form>
</div>
<iframe id="download_frame" name="download_frame" style="display: none"></iframe>
<div class="col-md-12">
    <div class="portlet light bordered">
        <div class="portlet-body">
            <div id="context-menu">
                <ul class="dropdown-menu pull-left" role="menu">
                    <li>
                        <a href="#">
                            <i class="fa fa-check-circle"></i> Load
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="fa fa-download"></i> Download
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="fa fa-trash"></i> Delete
                        </a>
                    </li>
                </ul>
            </div>
            <div class="table-toolbar">
                <div class="row">
                    <div class="col-md-6">
                        <button id="btnCreateServer" class="btn green" style="display: none;">
                            <i class=" fa fa-plus"></i> New
                        </button>
                        <button id="btnDeleteServers" class="btn red" style="display: none;">
                            <i class=" fa fa-trash"></i> Delete
                        </button>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-bordered table-hover" id="mapTable">
                <thead>
                    <tr>
                        <th class="table-checkbox">
                            <input type="checkbox" class="group-checkable" />
                        </th>
                        <th>
                            Loaded
                        </th>
                        <th>
                            Directory
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Size
                        </th>
                        <th>
                            Last Edit
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <p>Hint : Right-click on a line for more option</p>
        </div>
    </div>
</div>
<script type="text/javascript">
    function initPage() {
        var locTable = $('#mapTable');
        $("#downloadFormServerID").val(serverID);

        function fileSizeIEC(a, b, c, d, e) {
            if (a < 1024)
                return a + ' B';
            return (b = Math, c = b.log, d = 1024, e = c(a) / c(d) | 0, a / b.pow(d, e)).toFixed(2)
                + '&nbsp;' + (e ? 'KMGTPEZY'[--e] + 'B' : 'B');
        }

        locTable.dataTable({
            "columns": [{
                "orderable": false,
                "width": "5%"
            }, {
                "orderable": false,
                "width": "5%"
            }, {
                "orderable": true
            }, {
                "orderable": true
            }, {
                "orderable": true,
                "width": "5%"
            }, {
                "orderable": true,
                "width": "10%"
            }],
            // set the initial value
            "language": {
                "emptyTable": "Loading ..."
            },
            "paging": false,
            "searching": false,
            "info": false,
            "columnDefs": [{
                "searchable": false,
                "targets": [0]
            }],
            "order": [[1, "asc"]] // set second column as a default sort by asc
        });

        function refreshList() {
            LockPage();
            $.post("/API/Map/GetMaps",
            {
                ServerID: serverID
            },
            function (data) {
                UnlockPage();
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    $("#btnRefreshList").children("i").removeClass("fa-spin");
                    return;
                }

                locTable.DataTable().clear();
                root.children("Content").children("Map").each(function (index) {
                    var item = $(this);
                    var Loaded = item.children("Selected").text() == "true";
                    var DirName = item.children("DirName").text();
                    var MapName = item.children("MapName").text();
                    var Date = item.children("Date").text();
                    var Size = item.children("Size").text();

                    var chkbField = '<input type="checkbox" class="checkboxes" value="' + DirName + '" />';

                    var selectedField = '';

                    if (Loaded) {
                        selectedField = '<i class="fa fa-check-circle"></i>';
                    }

                    locTable.DataTable().row.add([chkbField, selectedField, DirName, MapName, fileSizeIEC(Size), Date]);
                });

                locTable.DataTable().draw();
                locTable.find('input:checkbox').uniform();

                $('tr.odd, tr.even').contextmenu({
                    target: '#context-menu',
                    onItem: function (context, e) {
                        var dirName = $(context).children("td:nth-child(3)").text();

                        var clicked = $(e.target).text().trim();

                        if (clicked == "Load") {
                            bootbox.confirm("Are you sure you want to select this map ?<br/>" +
                            "Note : if the server is running, it WILL be restarted",
                            function (result) {
                                if (result) {
                                    LockPage();
                                    $.post("/API/Map/SelectMap",
                                    {
                                        ServerID: serverID,
                                        MapDir: dirName
                                    },
                                    function (data) {

                                        var root = $($.parseXML(data)).find("Response");

                                        if (root.children("Type").text() == "Error") {
                                            toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                            return;
                                        }

                                        toastr.success("The Map have been selected", "Map Selected");

                                        refreshList();
                                    });
                                }
                            });
                        }
                        else if (clicked == "Download") {
                            $("#downloadFormMapDir").val(dirName);
                            $("#downloadForm").submit();
                        }
                        else if (clicked == "Delete") {
                            bootbox.confirm("Are you sure you want to delete this map ?<br/>" +
                            "Note : if the server is running, it WILL be stopped",
                            function (result) {
                                if (result) {
                                    LockPage();
                                    $.post("/API/Map/DeleteMap",
                                    {
                                        ServerID: serverID,
                                        MapDir: dirName
                                    },
                                    function (data) {

                                        var root = $($.parseXML(data)).find("Response");

                                        if (root.children("Type").text() == "Error") {
                                            toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                            return;
                                        }

                                        toastr.success("The Map have been deleted", "Map Deleted");

                                        refreshList();
                                    });
                                }
                            });
                        }
                    }
                });
            });
        }

        refreshList();

        $("#btnRefresh").click(function () {
            refreshList();
        });
    }
</script>
