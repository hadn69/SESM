@using SESM.DAL
@using SESM.Tools.Helpers
@model SESM.Models.Views.Server.ServerViewModel
@{
    ViewBag.Title = "Server Status";
    ServiceState status = (ServiceState) ViewData["State"];
    AccessLevel accessLevel = (AccessLevel)ViewData["AccessLevel"];
    int id = (int) ViewData["ID"];
}
<div class="row">
    <div class="col-md-4">
        <h3>@Model.Name's Status : @switch (status)
                                   {
                                       case ServiceState.Running:
                                           <span class="glyphicon glyphicon-ok-sign green"></span> @:Running
                                           break;
                                       case ServiceState.Starting:
                                           <span class="glyphicon glyphicon-chevron-up blue"></span> @:Starting
                                           break;
                                       case ServiceState.Stopping:
                                           <span class="glyphicon glyphicon-chevron-down blue"></span> @:Stopping
                                           break;
                                       case ServiceState.Stopped:
                                           <span class="glyphicon glyphicon-remove-sign red"></span> @:Stopped
                                           break;
                                       case ServiceState.Unknow:
                                           <span class="glyphicon glyphicon-warning-sign red"></span> @:Unknow
                                           break;
                                   }
            
        </h3>
        <h5>Game Mode : @Model.GameMode</h5>
        @if (Model.SaveName == null)
        {
            <h5>Current Map : New map at each start</h5>
        }
        else
        {
            <h5>Current Map : @Model.SaveName</h5>
        }
        
        @if (accessLevel == AccessLevel.SuperAdmin || accessLevel == AccessLevel.Admin || accessLevel == AccessLevel.Manager)
        {
            <div class="btn-group btn-group-justified">
                @if (status == ServiceState.Stopped || status == ServiceState.Unknow)
                {
                    <a class="btn btn-success" href="@(Url.Action("Start", "Server", new { id = id }))">Start</a>
                }
                @if (status == ServiceState.Running || status == ServiceState.Unknow)
                {
                    <a class="btn btn-warning" href="@(Url.Action("Restart", "Server", new { id = id }))">Restart</a>
                }
                @if (status == ServiceState.Running || status == ServiceState.Unknow)
                {
                    <a class="btn btn-danger" href="@(Url.Action("Stop", "Server", new { id = id }))">Stop</a>
                }
                @if (status != ServiceState.Stopped)
                {
                    <a class="btn btn-danger" onclick="return confirm('This will kill this server and may cause save corruption! Are you sure you want to do this?');" href="@(Url.Action("Kill", "Server", new { id = id }))">Kill</a>
                }
            </div>
        }
        
    </div>
    <div class="col-md-8">
        <div class="btn-group-vertical">
            @if (accessLevel != AccessLevel.Guest && accessLevel != AccessLevel.User)
            {
                <a class="btn btn-default" href="@(Url.Action("Details", "Server", new {id = id}))">Edit</a>
                <a class="btn btn-default" href="@(Url.Action("Index", "Log", new {id = id}))">Logs</a>
                <a class="btn btn-default" href="@(Url.Action("Index", "Map", new {id = id}))">Maps</a>
                <a class="btn btn-default" href="@(Url.Action("Index", "Backup", new {id = id}))">Backups</a>
                <a class="btn btn-default" href="@(Url.Action("Index", "Mod", new {id = id}))">Mods</a>
                <a class="btn btn-default" href="@(Url.Action("HourlyStats", "Server", new {id = id}))">Stats</a>
            }
            @if (accessLevel == AccessLevel.SuperAdmin)
            {
                <a class="btn btn-default" onclick="return confirm('Are you sure you want to delete this server?');" href="@(Url.Action("Delete", "Server", new {id = id}))">Delete</a>
            }
        </div>
    </div>
</div>
<br/>
<div class="row">
    <div class="col-md-12">
        <a class="btn btn-default" href="@(Url.Action("Index", "Server"))">Back to List</a>
    </div>
</div>