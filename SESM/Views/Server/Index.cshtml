@using SESM.DAL
@using SESM.DTO
@using SESM.Tools

@{
    ViewBag.Title = "Servers List";
    AccessLevel accessLevel = (AccessLevel) ViewData["AccessLevel"];
}

<h2>@ViewBag.Title</h2>

@if (accessLevel == AccessLevel.Manager
    || accessLevel == AccessLevel.Admin
    || accessLevel == AccessLevel.SuperAdmin)
{
    <div class="btn-group btn-group-justified col-md-6">
        @if(accessLevel == AccessLevel.SuperAdmin)
        {
        <a class="btn btn-default" href="@(Url.Action("Create", "Server"))">Add Server</a>
        }
        <a class="btn btn-success" href="@(Url.Action("StartAll", "Server"))">Start All</a>
        <a class="btn btn-warning" href="@(Url.Action("RestartAll", "Server"))">Restart All</a>
        <a class="btn btn-danger" href="@(Url.Action("StopAll", "Server"))">Stop All</a>
        <a class="btn btn-danger" onclick="return confirm('This will kill all started server, this may cause save corruption ! Are you sure you want to do this ?');" href="@(Url.Action("KillAll", "Server"))">Kill All</a>
    </div>
}

@{
    List<EntityServer> ServerList = ViewData["ServerList"] as List<EntityServer>;
    Dictionary<int, ServiceState> StateList = ViewData["StateList"] as Dictionary<int, ServiceState>;
}
<table class="table table-hover">
    <tr>
        <th>
            Name
        </th>
        <th>
            State
        </th>

    </tr>

    @foreach (EntityServer item in ServerList)
    {
        <tr onclick="location.href = '@(Url.Action("Status", "Server", new { id = item.Id }))'" class="hoverTable">
            <td>
                @item.Name
            </td>
            <td>
                @switch (StateList[item.Id])
                {
                    case ServiceState.Running:
                        <span class="glyphicon glyphicon-ok-sign green"></span>
                        break;
                    case ServiceState.Starting:
                        <span class="glyphicon glyphicon-chevron-up blue"></span>
                        break;
                    case ServiceState.Stopping:
                        <span class="glyphicon glyphicon-chevron-down blue"></span>
                        break;
                    case ServiceState.Stopped:
                        <span class="glyphicon glyphicon-remove-sign red"></span>
                        break;
                    case ServiceState.Unknow:
                        <span class="glyphicon glyphicon-warning-sign red"></span>
                        break;
                }
            </td>
        </tr>
    }

</table>
@if(ServerList.Count == 0)
{
    <p>You don't have access to any servers</p>
}

