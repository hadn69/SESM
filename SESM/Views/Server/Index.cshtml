@{
    ViewBag.Title = "Servers";
}
<script src="/assets/global/plugins/select2/select2.min.js" type="text/javascript"></script>
<script src="/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js" type="text/javascript"></script>
<div class="portlet light bordered">
    <div class="portlet-body">
        <div class="table-toolbar">
            <div class="row">
                <div class="col-md-6">
                    <div class="btn-group">
                        <button id="btnCreateServer" class="btn green">
                            New <i class="fa fa-plus"></i>
                        </button>
                        <button id="btnRefreshList" class="btn blue">
                            Refresh <i class="fa fa-refresh"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="btn-group pull-right">
                        <button id="btnCreateServer" class="btn green">
                            Start <i class="fa fa-plus"></i>
                        </button>
                        <button id="btnCreateServer" class="btn purple">
                            Stop <i class="fa fa-plus"></i>
                        </button>
                        <button id="btnCreateServer" class="btn yellow">
                            Restart <i class="fa fa-plus"></i>
                        </button>
                        <button id="btnCreateServer" class="btn red">
                            Kill <i class="fa fa-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-striped table-bordered table-hover" id="serverTable">
            <thead>
                <tr>
                    <th class="table-checkbox">
                        <input type="checkbox" class="group-checkable" data-set="#serverTable .checkboxes" />
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Status
                    </th>
                    <th style="display:none;">
                        Access Level
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<script type="text/javascript">
    function initPage() {
        var table = $('#serverTable');

        table.dataTable({
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No server available",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching server found",
                "paginate": {
                    "previous": "Prev",
                    "next": "Next",
                    "last": "Last",
                    "first": "First"
                }
            },

            "bStateSave": true, // save datatable state(pagination, sort, etc) in cookie.

            "columns": [{
                "orderable": false
            }, {
                "orderable": true
            }, {
                "orderable": true
            }, {
                "orderable": false
            }],
            "lengthMenu": [
                [5, 10, 15, 20, -1],
                [5, 10, 15, 20, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 10,
            "pagingType": "bootstrap_full_number",
            "columnDefs": [{
                "searchable": false,
                "targets": [0]
            },{
                "targets": [3],
                "visible": false
            }],
            "order": [[1, "asc"]] // set second column as a default sort by asc
        });

        table.find('.group-checkable').change(function () {
            var set = $(this).attr("data-set");
            var checked = $(this).is(":checked");
            $(set).each(function () {
                if (checked) {
                    $(this).attr("checked", true);
                    $(this).parents('tr').addClass("active");
                } else {
                    $(this).attr("checked", false);
                    $(this).parents('tr').removeClass("active");
                }
            });
            $.uniform.update(set);
        });

        table.on('change', 'tbody tr .checkboxes', function () {
            var checked = $(this).is(":checked");
            if (checked) {
                $(this).parents('tr').addClass("active");
            } else {
                $(this).parents('tr').removeClass("active");
            }

            if ($('tbody tr input:checkbox:checked').length == 0) {
                table.find('.group-checkable').attr("checked", false);
            } else {
                table.find('.group-checkable').attr("checked", true);
            }
            $.uniform.update($('.group-checkable'));
        });

        $(".dataTables_filter").addClass("pull-right");


        function refereshList() {
            $("#btnRefreshList").children("i").addClass("fa-spin");
            $.get("/API/Server/GetServers",
            {},
            function (data, status) {
                if (status != "success") {
                    $("#RegisterErrorText").html("Error Occured (see console for more infos).");
                    $('#RegisterError').show();
                    Console.warn("Fatal Error : ");
                    Console.warn("Status : " + status);
                    Console.warn("Data : " + data);
                    $("#btnRefreshList").children("i").removeClass("fa-spin");
                    return;
                }

                var xmlDoc = $.parseXML(data);
                var xmlObj = $(xmlDoc);
                var root = xmlObj.find("Response");

                if (root.children("Type").text() == "Error") {
                    $("#RegisterErrorText").html(root.children("Content").text());
                    $('#RegisterError').show();
                    $("#btnRefreshList").children("i").removeClass("fa-spin");
                    return;
                }

                table.DataTable().clear();
                root.children("Content").children("Server").each(function (index) {
                    var item = $(this);
                    var Name = item.children("Name").text();
                    var ID = item.children("ID").text();
                    var Public = item.children("Public").text();
                    var State = item.children("State").text();
                    var AccessLevel = item.children("AccessLevel").text();

                    var chkbField = "";
                    var statusField = "";

                    if (AccessLevel != "None" && AccessLevel != "Guest" && AccessLevel != "User")
                        chkbField += '<input type="checkbox" class="checkboxes" value="' + ID + '" />';

                    switch (State) {
                        case "Unknow":
                            statusField = '<span class="label label-sm label-default">Unknow</span>';
                            break;
                        case "Stopped":
                            statusField = '<span class="label label-sm label-danger">Stopped</span>';
                            break;
                        case "Starting":
                            statusField = '<span class="label label-sm label-info">Starting</span>';
                            break;
                        case "Running":
                            statusField = '<span class="label label-sm label-success">Running</span>';
                            break;
                        case "Stopping":
                            statusField = '<span class="label label-sm label-primary">Stopping</span>';
                            break;
                    }

                    $('#serverTable').DataTable().row.add([chkbField, Name, statusField, AccessLevel]);
                });
                $('#serverTable').DataTable().draw();
                $("#btnRefreshList").children("i").removeClass("fa-spin");
                $('#serverTable').find('input:checkbox').uniform();

                console.log(table.DataTable().rows());
            });
        }

        refereshList();
        $("#btnRefreshList").click(function () {
            var ids = getCheckedIds();
            refereshList();
            /*console.log(table.dataTable().rows());
            table.dataTable().rows().each(function (index, item) {
                console.log(item);
            });*/
            
        });

        function getCheckedIds() {
            var oTable = table.dataTable();
            var rowcollection = oTable.$(".checkboxes:checked", { "page": "all" });
            var retArray = [];
            rowcollection.each(function (index, item) {
                retArray.push($(item).val());
            });
            return retArray;
        }


    }
</script>