@{
    ViewBag.Title = "Access Manager";

    List<KeyValuePair<string, string>> breadCrumb = new List<KeyValuePair<string, string>>();
    breadCrumb.Add(new KeyValuePair<string, string>("Access Manager", "/Access/"));
    ViewBag.Breadcrumb = breadCrumb;

    ViewBag.RefreshBtn = true;
}
<script src="/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js" type="text/javascript"></script>
<script src="/assets/global/plugins/bootstrap-contextmenu/bootstrap-contextmenu.js"></script>
<script type="text/javascript" src="/assets/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<link rel="stylesheet" type="text/css" href="/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" />
<style>
    #inpCreateHostRoleUsers td:first-child, #inpEditHostRoleUsers td:first-child {
        text-align: center;
    }

    #inpCreateHostRoleUsers td:first-child, #inpCreateHostRoleUsers th:first-child, #inpEditHostRoleUsers td:first-child, #inpEditHostRoleUsers th:first-child {
        width: 10px;
    }
</style>

<!-- --- Create Host Role Modal --- -->
<div class="modal fade" id="createHostRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Create Host Role</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-body form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Role Name</label>
                            <div class="col-md-9">
                                <div class="input-inline">
                                    <input type="text" id="inpCreateHostRoleName" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Permissions</label>
                            <div class="col-md-9">
                                <div id="inpCreateHostRolePermissions" style="height: 200px; overflow-y: auto">

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Users</label>
                            <div class="col-md-9">
                                <div style="height: 200px; overflow-y: auto; overflow-x: hidden">
                                    <table class="table table-striped table-bordered table-hover" id="inpCreateHostRoleUsers">
                                        <thead>
                                        <tr>
                                            <th></th>
                                            <th>Login</th>
                                        </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn default" data-dismiss="modal">Close</button>
                <button type="button" class="btn blue" id="btnSaveCreateHost">Create</button>
            </div>
        </div>
    </div>
</div>
<!-- --- Edit Host Role Modal --- -->
<div class="modal fade" id="editHostRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Edit Host Role</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="inpEditHostRoleId"/>
                    <div class="form-body form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Role Name</label>
                            <div class="col-md-9">
                                <div class="input-inline">
                                    <input type="text" id="inpEditHostRoleName" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Permissions</label>
                            <div class="col-md-9">
                                <div id="inpEditHostRolePermissions" style="height: 200px; overflow-y: auto">

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Users</label>
                            <div class="col-md-9">
                                <div style="height: 200px; overflow-y: auto; overflow-x: hidden">
                                    <table class="table table-striped table-bordered table-hover" id="inpEditHostRoleUsers">
                                        <thead>
                                        <tr>
                                            <th></th>
                                            <th>Login</th>
                                        </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn default" data-dismiss="modal">Close</button>
                <button type="button" class="btn blue" id="btnSaveEditHost">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- --- Create Host Role Modal --- -->
<div class="modal fade" id="createServerRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Create Server Role</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-body form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Role Name</label>
                            <div class="col-md-9">
                                <div class="input-inline">
                                    <input type="text" id="inpCreateServerRoleName" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Permissions</label>
                            <div class="col-md-9">
                                <div id="inpCreateServerRolePermissions" style="height: 200px; overflow-y: auto">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn default" data-dismiss="modal">Close</button>
                <button type="button" class="btn blue" id="btnSaveCreateServer">Create</button>
            </div>
        </div>
    </div>
</div>
<!-- --- Edit Host Role Modal --- -->
<div class="modal fade" id="editServerRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Edit Host Role</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="inpEditServerRoleId" />
                    <div class="form-body form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Role Name</label>
                            <div class="col-md-9">
                                <div class="input-inline">
                                    <input type="text" id="inpEditServerRoleName" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Permissions</label>
                            <div class="col-md-9">
                                <div id="inpEditServerRolePermissions" style="height: 200px; overflow-y: auto">

                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn default" data-dismiss="modal">Close</button>
                <button type="button" class="btn blue" id="btnSaveEditServer">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="col-md-12">
    <div class="portlet light">
        <div class="portlet-body">
            <div class="tabbable-custom nav-justified">
                <ul class="nav nav-tabs nav-justified">
                    <li class="active">
                        <a href="#tab_Host" data-toggle="tab">
                            Host Roles
                        </a>
                    </li>
                    <li>
                        <a href="#tab_Server" data-toggle="tab">
                            Server Roles
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="tab_Host">
                        <!-- --- Context Menu --- -->
                        <div id="context-menu-host">
                            <ul class="dropdown-menu pull-left" role="menu">
                                <li>
                                    <a href="#">
                                        <i class="fa fa-edit"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <a href="#">
                                        <i class="fa fa-trash"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="table-toolbar">
                            <div class="row">
                                <div class="col-md-12">
                                    <button id="btnCreateHostRole" class="btn green">
                                        <i class=" fa fa-plus"></i> New
                                    </button>
                                </div>
                            </div>
                        </div>

                        <table class="table table-striped table-bordered table-hover" id="hostTable">
                            <thead>
                                <tr>
                                    <th>
                                        Id
                                    </th>
                                    <th>
                                        Name
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <p>Hint : Right-click (Desktop) / Long-Press (Mobile) on a line for more options</p>
                    </div>
                    <div class="tab-pane" id="tab_Server">
                        <!-- --- Context Menu --- -->
                        <div id="context-menu-server">
                            <ul class="dropdown-menu pull-left" role="menu">
                                <li>
                                    <a href="#">
                                        <i class="fa fa-edit"></i> Edit
                                    </a>
                                </li>
                                <li>
                                    <a href="#">
                                        <i class="fa fa-trash"></i> Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="table-toolbar">
                            <div class="row">
                                <div class="col-md-12">
                                    <button id="btnCreateServerRole" class="btn green">
                                        <i class=" fa fa-plus"></i> New
                                    </button>
                                </div>
                            </div>
                        </div>

                        <table class="table table-striped table-bordered table-hover" id="serverTable">
                            <thead>
                                <tr>
                                    <th>
                                        Id
                                    </th>
                                    <th>
                                        Name
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <p>Hint : Right-click (Desktop) / Long-Press (Mobile) on a line for more options</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function initPage() {
        function isEmptyOrSpaces(str) {
            return str === null || str.match(/^\s*$/) !== null;
        }

        // Initializers
        $.fn.bootstrapSwitch.defaults.onText = '<i class="fa fa-check"></i>';
        $.fn.bootstrapSwitch.defaults.offText = '<i class="fa fa-times"></i>';

        var hostTable = $('#hostTable');

        hostTable.dataTable({
            columns: [{
                orderable: false,
                "visible": false
            }, {
                orderable: true
            }],
            // set the initial value
            language: {
                emptyTable: "No roles"
            },
            paging: false,
            searching: false,
            info: false,
            columnDefs: [{
                searchable: false,
                targets: [0]
            }],
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        var serverTable = $('#serverTable');

        serverTable.dataTable({
            columns: [{
                orderable: false,
                "visible": false
            }, {
                orderable: true
            }],
            // set the initial value
            language: {
                emptyTable: "No roles"
            },
            paging: false,
            searching: false,
            info: false,
            columnDefs: [{
                searchable: false,
                targets: [0]
            }],
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        var createHostRoleTable = $("#inpCreateHostRoleUsers");

        createHostRoleTable.dataTable({
            columns: [{
                orderable: true
            }, {
                orderable: true
            }],
            language: {
                emptyTable: "Loading ..."
            },
            paging: false,
            info: false,
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        $("#inpCreateHostRoleUsers_filter").parent().removeClass("col-md-6");

        var editHostRoleTable = $("#inpEditHostRoleUsers");

        editHostRoleTable.dataTable({
            columns: [{
                orderable: true
            }, {
                orderable: true
            }],
            language: {
                emptyTable: "Loading ..."
            },
            paging: false,
            info: false,
            order: [[1, "asc"]] // set second column as a default sort by asc
        });

        $("#inpEditHostRoleUsers_filter").parent().removeClass("col-md-6");

        // Loading Host Rights
        var HostAccess = {};

        $.get("/API/Access/GetHostRoleAccess",
        function (data) {
            var root = $($.parseXML(data)).find("Response");

            if (root.children("Type").text() == "Error") {
                toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                $("#btnRefreshList").children("i").removeClass("fa-spin");
                return;
            }

            var content = root.children("Content");

            HostAccess = {};

            HostAccess.ACCESS_HOST_READ = content.children("ACCESS_HOST_READ").text() == "true";
            HostAccess.ACCESS_HOST_CREATE = content.children("ACCESS_HOST_CREATE").text() == "true";
            HostAccess.ACCESS_HOST_DELETE = content.children("ACCESS_HOST_DELETE").text() == "true";
            HostAccess.ACCESS_HOST_EDIT_NAME = content.children("ACCESS_HOST_EDIT_NAME").text() == "true";
            HostAccess.ACCESS_HOST_EDIT_PERMISSION = content.children("ACCESS_HOST_EDIT_PERMISSION").text() == "true";
            HostAccess.ACCESS_HOST_EDIT_USERS = content.children("ACCESS_HOST_EDIT_USERS").text() == "true";

            if (HostAccess.ACCESS_HOST_CREATE)
                $("#btnCreateHostRole").fadeIn("slow");
            else
                $("#btnCreateHostRole").fadeOut("slow");

            loadHostRoles();
        });

        // Loading Server Rights
        var ServerAccess = {};

        $.get("/API/Access/GetServerRoleAccess",
        function (data) {
            var root = $($.parseXML(data)).find("Response");

            if (root.children("Type").text() == "Error") {
                toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                return;
            }

            var content = root.children("Content");

            ServerAccess = {};

            ServerAccess.ACCESS_SERVER_READ = content.children("ACCESS_SERVER_READ").text() == "true";
            ServerAccess.ACCESS_SERVER_CREATE = content.children("ACCESS_SERVER_CREATE").text() == "true";
            ServerAccess.ACCESS_SERVER_DELETE = content.children("ACCESS_SERVER_DELETE").text() == "true";
            ServerAccess.ACCESS_SERVER_EDIT_NAME = content.children("ACCESS_SERVER_EDIT_NAME").text() == "true";
            ServerAccess.ACCESS_SERVER_EDIT_PERMISSION = content.children("ACCESS_SERVER_EDIT_PERMISSION").text() == "true";

            if (ServerAccess.ACCESS_SERVER_CREATE)
                $("#btnCreateServerRole").fadeIn("slow");
            else
                $("#btnCreateServerRole").fadeOut("slow");

            loadServerRoles();
        });

        function loadHostRoles() {
            if (HostAccess.ACCESS_HOST_READ) {
                $.get("/API/Access/GetHostRoles",
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    hostTable.DataTable().clear();

                    var content = root.children("Content");

                    content.children("HostRole").each(function () {
                        var item = $(this);
                        var Id = item.children("Id").text();
                        var Name = item.children("Name").text();

                        hostTable.DataTable().row.add([Id, Name]);
                    });

                    hostTable.DataTable().draw();

                    $('tr.odd, tr.even').contextmenu({
                        target: '#context-menu-host',
                        before: function (e, element, target) {
                            this.getMenu().find("li").hide();
                            e.preventDefault();


                            if (!(HostAccess.ACCESS_HOST_DELETE || HostAccess.ACCESS_HOST_EDIT_NAME || HostAccess.ACCESS_HOST_EDIT_PERMISSION || HostAccess.ACCESS_HOST_EDIT_USERS))
                                return false;

                            if (HostAccess.ACCESS_HOST_EDIT_NAME || HostAccess.ACCESS_HOST_EDIT_PERMISSION || HostAccess.ACCESS_HOST_EDIT_USERS)
                                this.getMenu().find("li:nth-child(1)").show();
                            if (HostAccess.ACCESS_HOST_DELETE)
                                this.getMenu().find("li:nth-child(2)").show();
                            return true;
                        },
                        onItem: function (context, e) {
                            var hostRoleId = $("#hostTable").DataTable().row($(context).index()).data()[0];

                            var clicked = $(e.target).text().trim();

                            if (clicked == "Edit") {
                                $.post("/API/Access/GetHostRoleDetails", 
                                {
                                HostRoleId: hostRoleId
                                },
                                function (data) {

                                    var root = $($.parseXML(data)).find("Response");

                                    if (root.children("Type").text() == "Error") {
                                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                        return;
                                    }

                                    $("#editHostRoleModal").modal('show');

                                    var content = root.children("Content");

                                    var Name = content.children("Name").text();

                                    $("#inpEditHostRoleId").val(hostRoleId);

                                    $("#inpEditHostRoleName").val(Name);
                                    $("#inpEditHostRoleName").prop("disabled", !HostAccess.ACCESS_HOST_EDIT_NAME);

                                    $("#inpEditHostRolePermissions").find("input").bootstrapSwitch('state', false);
                                    $("#inpEditHostRolePermissions").find("input").prop("disabled", !HostAccess.ACCESS_HOST_EDIT_PERMISSION);

                                    content.children("Permissions").children().each(function() {
                                        var item = $(this).text();

                                        $("#inpEditHostRolePermissions").find('input[value="' + item + '"]').bootstrapSwitch('state', true);
                                    });

                                    $("#inpEditHostRoleUsers").DataTable().rows().nodes().to$().find("input").prop('checked', false);
                                    $("#inpEditHostRoleUsers").DataTable().rows().nodes().to$().find("input").prop("disabled", !HostAccess.ACCESS_HOST_EDIT_USERS);

                                    content.children("Users").children().each(function () {
                                        var item = $(this).text();

                                        $("#inpEditHostRoleUsers").DataTable().rows().nodes().to$().find('input[value="' + item + '"]').prop('checked', true);
                                    });

                                });
                            } else if (clicked == "Delete") {
                                bootbox.confirm("Are you sure you want to delete this role ?",
                                    function (result) {
                                        if (result) {
                                            $.post("/API/Access/DeleteHostRole",
                                                {
                                                    HostRoleId: hostRoleId
                                                },
                                                function (data) {
                                                    var root = $($.parseXML(data)).find("Response");

                                                    if (root.children("Type").text() == "Error") {
                                                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                                        return;
                                                    }

                                                    toastr.success("The role has been deleted", "Role deleted");
                                                    loadHostRoles();
                                                });
                                        }
                                    });

                            }
                        }
                    });
                });
            }

            if (HostAccess.ACCESS_HOST_CREATE
                || HostAccess.ACCESS_HOST_EDIT_NAME
                || HostAccess.ACCESS_HOST_EDIT_PERMISSION
                || HostAccess.ACCESS_HOST_EDIT_USERS) {

                $.get("/API/Access/GetHostPermissions",
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    $("#inpCreateHostRolePermissions").empty();
                    $("#inpEditHostRolePermissions").empty();

                    var content = root.children("Content");

                    content.children("HostPerm").each(function () {
                        var item = $(this);
                        var Name = item.children("Name").text();
                        var Value = item.children("Value").text();

                        $("#inpCreateHostRolePermissions").append('<br/><div class="col-md-8">' + Name + '</div><div class="col-md-4 text-center">' +
                            '<input type="checkbox" value="' + Value + '" name="' + Name + '"></div>');

                        $("#inpEditHostRolePermissions").append('<br/><div class="col-md-8">' + Name + '</div><div class="col-md-4 text-center">' +
                            '<input type="checkbox" value="' + Value + '" name="' + Name + '"></div>');
                    });

                    $("#inpCreateHostRolePermissions input[type='checkbox']").bootstrapSwitch();
                    $("#inpEditHostRolePermissions input[type='checkbox']").bootstrapSwitch();
                });

                $.get("/API/Users/GetUsers",
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    createHostRoleTable.DataTable().clear();
                    editHostRoleTable.DataTable().clear();

                    var content = root.children("Content");

                    content.children("User").each(function () {
                        var item = $(this);
                        var ID = item.children("ID").text();
                        var Login = item.children("Login").text();

                        createHostRoleTable.DataTable().row.add(['<input type="checkbox" value="' + ID + '" />', Login]);
                        editHostRoleTable.DataTable().row.add(['<input type="checkbox" value="' + ID + '" />', Login]);
                    });

                    createHostRoleTable.DataTable().draw();
                    editHostRoleTable.DataTable().draw();

                });

            }

        }

        function loadServerRoles() {
            if (ServerAccess.ACCESS_SERVER_READ) {
                $.get("/API/Access/GetServerRoles",
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    serverTable.DataTable().clear();

                    var content = root.children("Content");

                    content.children("ServerRole").each(function () {
                        var item = $(this);
                        var Id = item.children("Id").text();
                        var Name = item.children("Name").text();

                        serverTable.DataTable().row.add([Id, Name]);
                    });

                    serverTable.DataTable().draw();

                    $('tr.odd, tr.even').contextmenu({
                        target: '#context-menu-server',
                        before: function (e, element, target) {
                            this.getMenu().find("li").hide();
                            e.preventDefault();

                            if (!(ServerAccess.ACCESS_SERVER_DELETE || ServerAccess.ACCESS_SERVER_EDIT_NAME || ServerAccess.ACCESS_HOST_EDIT_PERMISSION))
                                return false;

                            if (ServerAccess.ACCESS_SERVER_EDIT_NAME || ServerAccess.ACCESS_HOST_EDIT_PERMISSION)
                                this.getMenu().find("li:nth-child(1)").show();
                            if (ServerAccess.ACCESS_SERVER_DELETE)
                                this.getMenu().find("li:nth-child(2)").show();
                            return true;
                        },
                        onItem: function (context, e) {
                            var serverRoleId = $("#serverTable").DataTable().row($(context).index()).data()[0];

                            var clicked = $(e.target).text().trim();

                            if (clicked == "Edit") {
                                $.post("/API/Access/GetServerRoleDetails",
                                {
                                    ServerRoleId: serverRoleId
                                },
                                function (data) {

                                    var root = $($.parseXML(data)).find("Response");

                                    if (root.children("Type").text() == "Error") {
                                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                        return;
                                    }

                                    $("#editServerRoleModal").modal('show');

                                    var content = root.children("Content");

                                    var Name = content.children("Name").text();

                                    $("#inpEditServerRoleId").val(serverRoleId);

                                    $("#inpEditServerRoleName").val(Name);
                                    $("#inpEditServerRoleName").prop("disabled", !ServerAccess.ACCESS_SERVER_EDIT_NAME);

                                    $("#inpEditServerRolePermissions").find("input").bootstrapSwitch('state', false);
                                    $("#inpEditServerRolePermissions").find("input").prop("disabled", !ServerAccess.ACCESS_SERVER_EDIT_PERMISSION);

                                    content.children("Permissions").children().each(function () {
                                        var item = $(this).text();

                                        $("#inpEditServerRolePermissions").find('input[value="' + item + '"]').bootstrapSwitch('state', true);
                                    });
                                });
                            } else if (clicked == "Delete") {
                                bootbox.confirm("Are you sure you want to delete this role ?",
                                    function (result) {
                                        if (result) {
                                            $.post("/API/Access/DeleteServerRole",
                                                {
                                                    ServerRoleId: serverRoleId
                                                },
                                                function (data) {
                                                    var root = $($.parseXML(data)).find("Response");

                                                    if (root.children("Type").text() == "Error") {
                                                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                                                        return;
                                                    }

                                                    toastr.success("The role has been deleted", "Role deleted");
                                                    loadServerRoles();
                                                });
                                        }
                                    });

                            }
                        }
                    });
                });
            }

            if (ServerAccess.ACCESS_SERVER_CREATE
                || ServerAccess.ACCESS_SERVER_EDIT_NAME
                || ServerAccess.ACCESS_SERVER_EDIT_PERMISSION) {

                $.get("/API/Access/GetServerPermissions",
                function (data) {
                    var root = $($.parseXML(data)).find("Response");

                    if (root.children("Type").text() == "Error") {
                        toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                        return;
                    }

                    $("#inpCreateServerRolePermissions").empty();
                    $("#inpEditServerRolePermissions").empty();

                    var content = root.children("Content");

                    content.children("ServerPerm").each(function () {
                        var item = $(this);
                        var Name = item.children("Name").text();
                        var Value = item.children("Value").text();

                        $("#inpCreateServerRolePermissions").append('<br/><div class="col-md-8">' + Name + '</div><div class="col-md-4 text-center">' +
                            '<input type="checkbox" value="' + Value + '" name="' + Name + '"></div>');

                        $("#inpEditServerRolePermissions").append('<br/><div class="col-md-8">' + Name + '</div><div class="col-md-4 text-center">' +
                            '<input type="checkbox" value="' + Value + '" name="' + Name + '"></div>');
                    });

                    $("#inpCreateServerRolePermissions input[type='checkbox']").bootstrapSwitch();
                    $("#inpEditServerRolePermissions input[type='checkbox']").bootstrapSwitch();
                });
            }
        }


        $("#btnCreateHostRole").click(function () {
            $("#createHostRoleModal").modal('show');

            $("#inpCreateHostRoleName").prop("readonly", !HostAccess.ACCESS_HOST_EDIT_NAME);

            $("#inpCreateHostRolePermissions input").bootstrapSwitch("readonly", !HostAccess.ACCESS_HOST_EDIT_PERMISSION);

            $("#inpCreateHostRoleUsers input").prop("disabled", !HostAccess.ACCESS_HOST_EDIT_USERS);

        });

        $("#btnCreateServerRole").click(function () {
            $("#createServerRoleModal").modal('show');

            $("#inpCreateServerRoleName").prop("readonly", !ServerAccess.ACCESS_SERVER_EDIT_NAME);

            $("#inpCreateServerRolePermissions input").bootstrapSwitch("readonly", !ServerAccess.ACCESS_SERVER_EDIT_PERMISSION);
        });

        $("#btnSaveCreateHost").click(function () {
            var permIds = [];

            $("#inpCreateHostRolePermissions input:checked").each(function () {
                var item = $(this);
                permIds.push(item.val());
            });

            var userIds = [];

            $("#inpCreateHostRoleUsers input:checked").each(function () {
                var item = $(this);
                userIds.push(item.val());
            });


            $.post("/API/Access/CreateHostRole",
            {
                Name: $("#inpCreateHostRoleName").val(),
                Permissions: permIds.join(";"),
                Users: userIds.join(";")

            },
            function (data) {
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    return;
                }
                loadHostRoles();
                $("#createHostRoleModal").modal('hide');
            });
        });

        $("#btnSaveCreateServer").click(function () {
            var permIds = [];

            $("#inpCreateServerRolePermissions input:checked").each(function () {
                var item = $(this);
                permIds.push(item.val());
            });

            $.post("/API/Access/CreateServerRole",
            {
                Name: $("#inpCreateServerRoleName").val(),
                Permissions: permIds.join(";")
            },
            function (data) {
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    return;
                }
                loadServerRoles();
                $("#createServerRoleModal").modal('hide');
            });
        });

        $("#btnSaveEditHost").click(function () {
            var permIds = [];

            $("#inpEditHostRolePermissions input:checked").each(function () {
                var item = $(this);
                permIds.push(item.val());
            });

            var userIds = [];

            $("#inpEditHostRoleUsers input:checked").each(function () {
                var item = $(this);
                userIds.push(item.val());
            });


            $.post("/API/Access/SetHostRoleDetails",
            {
                HostRoleId: $("#inpEditHostRoleId").val(),
                Name: $("#inpEditHostRoleName").val(),
                Permissions: permIds.join(";"),
                Users: userIds.join(";")

            },
            function (data) {
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    return;
                }
                loadHostRoles();
                $("#editHostRoleModal").modal('hide');
            });
        });

        $("#btnSaveEditServer").click(function () {
            var permIds = [];

            $("#inpEditServerRolePermissions input:checked").each(function () {
                var item = $(this);
                permIds.push(item.val());
            });

            $.post("/API/Access/SetServerRoleDetails",
            {
                ServerRoleId: $("#inpEditServerRoleId").val(),
                Name: $("#inpEditServerRoleName").val(),
                Permissions: permIds.join(";")
            },
            function (data) {
                var root = $($.parseXML(data)).find("Response");

                if (root.children("Type").text() == "Error") {
                    toastr.error(root.children("Content").text(), "Error " + root.children("ReturnCode").text());
                    return;
                }
                loadServerRoles();
                $("#editServerRoleModal").modal('hide');
            });
        });



        $("#btnRefresh").click(function () {
            loadHostRoles();
            loadServerRoles();
        });
    }
</script>